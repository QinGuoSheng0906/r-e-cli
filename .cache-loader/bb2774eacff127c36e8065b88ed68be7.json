{"remainingRequest":"F:\\react\\c-s-cli\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-1!F:\\react\\c-s-cli\\node_modules\\babel-loader\\lib\\index.js??ref--4-2!F:\\react\\c-s-cli\\node_modules\\eslint-loader\\dist\\cjs.js!F:\\react\\c-s-cli\\client\\lib\\http\\axios.js","dependencies":[{"path":"F:\\react\\c-s-cli\\client\\lib\\http\\axios.js","mtime":1608101753570},{"path":"F:\\react\\c-s-cli\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586917825000},{"path":"F:\\react\\c-s-cli\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1603871286923},{"path":"F:\\react\\c-s-cli\\node_modules\\babel-loader\\lib\\index.js","mtime":1588843000311},{"path":"F:\\react\\c-s-cli\\node_modules\\eslint-loader\\dist\\cjs.js","mtime":1588843001323}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9Qcm9taXNlIGZyb20gIkBiYWJlbC9ydW50aW1lLWNvcmVqczIvY29yZS1qcy9wcm9taXNlIjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmVudGVyTW9kdWxlIDogdW5kZWZpbmVkOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5kZWZhdWx0LnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgovKioNCiAqIGF4aW9z6K+35rGCDQogKiBAcGFyYW0gIHtTdHJpbmd9IHBhdGggICDor7fmsYLot6/lvoQNCiAqIEBwYXJhbSAge09iamVjdH0gZGF0YSAgIOivt+axguWPguaVsA0KICogQHBhcmFtICB7U3RyaW5nfSBtZXRob2Qg6K+35rGC57G75Z6LDQogKiBAcGFyYW0gIHtPYmplY3R9IG9wdHMgICDor7fmsYLpgInpobkNCiAqIEByZXR1cm4ge09iamVjdH0gICAgICAgIFByb21pc2Xlr7nosaENCiAqLwppbXBvcnQgQXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgVVJMUyBmcm9tICcuLi8uLi9hcGkvYXBpJzsKaW1wb3J0IHsgc2VyaWFsaXplIH0gZnJvbSAnQGxpYi91dGlscyc7IC8vIOaOpeWPo+eZveWQjeWNlQoKdmFyIHdoaXRlTGlzdCA9IFsnJ107Ci8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovCgp2YXIgaXNJbldoaXRlTGlzdCA9IGZ1bmN0aW9uIGlzSW5XaGl0ZUxpc3QodXJsKSB7CiAgdmFyIGZsYWcgPSBmYWxzZTsKICB3aGl0ZUxpc3QuZm9yRWFjaChmdW5jdGlvbiAoZSkgewogICAgaWYgKHVybC5pbmRleE9mKGUpID49IDApIHsKICAgICAgZmxhZyA9IHRydWU7CiAgICB9CiAgfSk7CiAgcmV0dXJuIGZsYWc7Cn07IC8vIOi2heaXtuaXtumXtAoKCkF4aW9zLmRlZmF1bHRzLnRpbWVvdXQgPSAzMDAwMDsKQXhpb3MuZGVmYXVsdHMuaGVhZGVycy5wb3N0WydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJzsgLy8g6K+35rGC5Zyw5Z2ACi8vIEF4aW9zLmRlZmF1bHRzLmJhc2VVUkwgPSBpc0xvY2FsRGV2ID09PSB0cnVlID8gJycgOiBjb25maWdbcHJvY2Vzcy5lbnYuUFJPQ0VTU19FTlZdLkJBU0VfVVJMCi8vIOivt+axguaLpuaIqgoKQXhpb3MuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAvLyBpZiAoIWlzSW5XaGl0ZUxpc3QoY29uZmlnLnVybCkpIHt9CiAgY29uc29sZS5sb2coJ2NvbmZpZycsIGNvbmZpZyk7CiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycikgewogIHJldHVybiBfUHJvbWlzZS5yZWplY3QoZXJyKTsKfSk7IC8vIOWTjeW6lOaLpuaIqgoKQXhpb3MuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICBjb25zb2xlLmxvZygncmVzcG9uc2UnLCByZXNwb25zZS5kYXRhKTsKCiAgaWYgKHJlc3BvbnNlLmRhdGEuc3VjY2VlZCkgewogICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgfSBlbHNlIHsKICAgIHJldHVybiBfUHJvbWlzZS5yZWplY3QocmVzcG9uc2UuZGF0YSk7CiAgfQp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICByZXR1cm4gX1Byb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CgpmdW5jdGlvbiBBamF4KF9yZWYpIHsKICB2YXIgdXJsID0gX3JlZi51cmwsCiAgICAgIGRhdGEgPSBfcmVmLmRhdGEsCiAgICAgIG1ldGhvZCA9IF9yZWYubWV0aG9kLAogICAgICBvcHRzID0gX3JlZi5vcHRzOwogIHZhciBwYXRoID0gVVJMU1t1cmxdOwogIGlmICghcGF0aCkgcmV0dXJuIF9Qcm9taXNlLnJlamVjdChuZXcgRXJyb3IoJ+aXoOaViOeahEFQSeWcsOWdgCcpKTsgLy8gbGV0IGlkUmVnID0gLzppZC87CiAgLy8gaWYgKGlkUmVnLnRlc3QocGF0aCkpIHsKICAvLyAgICBwYXRoID0gcGF0aC5yZXBsYWNlKGlkUmVnLCBkYXRhLmlkKTsKICAvLyAgICBkZWxldGUgZGF0YS5pZDsKICAvLyB9CgogIG1ldGhvZCA9IG1ldGhvZCA/IG1ldGhvZC50b0xvd2VyQ2FzZSgpIDogJ2dldCc7CgogIGlmIChtZXRob2QgPT0gJ2dldCcpIHsKICAgIHBhdGggKz0gKC9cPy8udGVzdChwYXRoKSA/ICcmJyA6ICc/JykgKyBzZXJpYWxpemUoZGF0YSk7CiAgfSAvLyDlj5HpgIHor7fmsYIKCgogIHJldHVybiBBeGlvcyh7CiAgICB1cmw6IHBhdGgsCiAgICBtZXRob2Q6IG1ldGhvZCwKICAgIGRhdGE6IGRhdGEKICB9KTsKfQoKdmFyIF9kZWZhdWx0ID0gQWpheDsKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQgOiB1bmRlZmluZWQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKHdoaXRlTGlzdCwgIndoaXRlTGlzdCIsICJGOlxccmVhY3RcXGMtcy1jbGlcXGNsaWVudFxcbGliXFxodHRwXFxheGlvcy5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGlzSW5XaGl0ZUxpc3QsICJpc0luV2hpdGVMaXN0IiwgIkY6XFxyZWFjdFxcYy1zLWNsaVxcY2xpZW50XFxsaWJcXGh0dHBcXGF4aW9zLmpzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoQWpheCwgIkFqYXgiLCAiRjpcXHJlYWN0XFxjLXMtY2xpXFxjbGllbnRcXGxpYlxcaHR0cFxcYXhpb3MuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiRjpcXHJlYWN0XFxjLXMtY2xpXFxjbGllbnRcXGxpYlxcaHR0cFxcYXhpb3MuanMiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmxlYXZlTW9kdWxlIDogdW5kZWZpbmVkOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["F:/react/c-s-cli/client/lib/http/axios.js"],"names":["Axios","URLS","serialize","whiteList","isInWhiteList","url","flag","forEach","e","indexOf","defaults","timeout","headers","post","interceptors","request","use","config","console","log","err","reject","response","data","succeed","error","Ajax","method","opts","path","Error","toLowerCase","test"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,SAAT,QAA0B,YAA1B,C,CAEA;;AACA,IAAMC,SAAS,GAAG,CAAE,EAAF,CAAlB;AAEA;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAUC,GAAV,EAAe;AAClC,MAAIC,IAAI,GAAG,KAAX;AACAH,EAAAA,SAAS,CAACI,OAAV,CAAkB,UAAUC,CAAV,EAAa;AAC5B,QAAIH,GAAG,CAACI,OAAJ,CAAYD,CAAZ,KAAkB,CAAtB,EAAyB;AACtBF,MAAAA,IAAI,GAAG,IAAP;AACF;AACH,GAJD;AAKA,SAAOA,IAAP;AACF,CARD,C,CAUA;;;AACAN,KAAK,CAACU,QAAN,CAAeC,OAAf,GAAyB,KAAzB;AAEAX,KAAK,CAACU,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C,C,CAEA;AACA;AAEA;;AACAb,KAAK,CAACc,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACG,UAAAC,MAAM,EAAI;AACP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACA,SAAOA,MAAP;AACF,CALJ,EAMG,UAAAG,GAAG,EAAI;AACJ,SAAO,SAAQC,MAAR,CAAeD,GAAf,CAAP;AACF,CARJ,E,CAWA;;AACApB,KAAK,CAACc,YAAN,CAAmBQ,QAAnB,CAA4BN,GAA5B,CACG,UAAAM,QAAQ,EAAI;AACTJ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,QAAQ,CAACC,IAAjC;;AACA,MAAID,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACxB,WAAOF,QAAQ,CAACC,IAAhB;AACF,GAFD,MAEO;AACJ,WAAO,SAAQF,MAAR,CAAeC,QAAQ,CAACC,IAAxB,CAAP;AACF;AACH,CARJ,EASG,UAAAE,KAAK,EAAI;AACN,SAAO,SAAQJ,MAAR,CAAeI,KAAf,CAAP;AACF,CAXJ;;AAcA,SAASC,IAAT,OAA4C;AAAA,MAA3BrB,GAA2B,QAA3BA,GAA2B;AAAA,MAAtBkB,IAAsB,QAAtBA,IAAsB;AAAA,MAAhBI,MAAgB,QAAhBA,MAAgB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACzC,MAAIC,IAAI,GAAG5B,IAAI,CAACI,GAAD,CAAf;AACA,MAAI,CAACwB,IAAL,EAAW,OAAO,SAAQR,MAAR,CAAe,IAAIS,KAAJ,CAAU,UAAV,CAAf,CAAP,CAF8B,CAGzC;AACA;AACA;AACA;AACA;;AACAH,EAAAA,MAAM,GAAGA,MAAM,GAAGA,MAAM,CAACI,WAAP,EAAH,GAA0B,KAAzC;;AACA,MAAIJ,MAAM,IAAI,KAAd,EAAoB;AACjBE,IAAAA,IAAI,IAAI,CAAC,KAAKG,IAAL,CAAUH,IAAV,IAAkB,GAAlB,GAAwB,GAAzB,IAAgC3B,SAAS,CAACqB,IAAD,CAAjD;AACF,GAXwC,CAYzC;;;AACA,SAAOvB,KAAK,CAAC;AACVK,IAAAA,GAAG,EAAEwB,IADK;AAEVF,IAAAA,MAAM,EAANA,MAFU;AAGVJ,IAAAA,IAAI,EAAJA;AAHU,GAAD,CAAZ;AAKF;;eAGcG,I;AAAf;;;;;;;;;;0BArEMvB,S;0BAGAC,a;0BA6CGsB,I","sourcesContent":["/**\r\n * axios请求\r\n * @param  {String} path   请求路径\r\n * @param  {Object} data   请求参数\r\n * @param  {String} method 请求类型\r\n * @param  {Object} opts   请求选项\r\n * @return {Object}        Promise对象\r\n */\r\n\r\nimport Axios from 'axios';\r\nimport URLS from '../../api/api';\r\nimport { serialize } from '@lib/utils';\r\n\r\n// 接口白名单\r\nconst whiteList = [ '' ]\r\n\r\n/* eslint-disable no-unused-vars */ \r\nconst isInWhiteList = function (url) {\r\n   let flag = false\r\n   whiteList.forEach(function (e) {\r\n      if (url.indexOf(e) >= 0) {\r\n         flag = true\r\n      }\r\n   })\r\n   return flag\r\n}\r\n\r\n// 超时时间\r\nAxios.defaults.timeout = 30000;\r\n\r\nAxios.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\n// 请求地址\r\n// Axios.defaults.baseURL = isLocalDev === true ? '' : config[process.env.PROCESS_ENV].BASE_URL\r\n\r\n// 请求拦截\r\nAxios.interceptors.request.use(\r\n   config => {\r\n      // if (!isInWhiteList(config.url)) {}\r\n      console.log('config', config);\r\n      return config\r\n   },\r\n   err => {\r\n      return Promise.reject(err)\r\n   }\r\n)\r\n\r\n// 响应拦截\r\nAxios.interceptors.response.use(\r\n   response => {\r\n      console.log('response', response.data);\r\n      if (response.data.succeed) {\r\n         return response.data\r\n      } else {\r\n         return Promise.reject(response.data)\r\n      }\r\n   },\r\n   error => {\r\n      return Promise.reject(error)\r\n   }\r\n);\r\n\r\nfunction Ajax ({ url, data, method, opts }) {\r\n   let path = URLS[url];\r\n   if (!path) return Promise.reject(new Error('无效的API地址'));\r\n   // let idReg = /:id/;\r\n   // if (idReg.test(path)) {\r\n   //    path = path.replace(idReg, data.id);\r\n   //    delete data.id;\r\n   // }\r\n   method = method ? method.toLowerCase() : 'get';\r\n   if (method == 'get'){\r\n      path += (/\\?/.test(path) ? '&' : '?') + serialize(data);\r\n   }\r\n   // 发送请求\r\n   return Axios({\r\n      url: path,\r\n      method,\r\n      data\r\n   });\r\n}\r\n\r\n \r\nexport default Ajax;"]}]}